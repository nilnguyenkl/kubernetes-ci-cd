// node {

//     checkout scm

//     env.DOCKER_API_VERSION="1.23"
    
//     sh "git rev-parse --short HEAD > commit-id"

//     tag = readFile('commit-id').replace("\n", "").replace("\r", "")
//     appName = "puzzle"
//     registryHost = "127.0.0.1:30400/"
//     imageName = "${registryHost}${appName}:${tag}"
//     env.BUILDIMG=imageName

//     stage "Build"
    
//         sh "docker build -t ${imageName} applications/puzzle"
    
//     stage "Push"

//         sh "docker push ${imageName}"

//     stage "Deploy"
        
//         sh "sed 's#127.0.0.1:30400/puzzle:latest#'$BUILDIMG'#' applications/puzzle/k8s/deployment.yaml | kubectl apply -f -"
// }

pipeline {
    agent any
    environment {
        DOCKER_API_VERSION = "1.23"
        appName = "puzzle"
        registryHost = "127.0.0.1:30400/"
        // deploymentName = "hello-kenzan"
        // deploymentFile = "applications/hello-kenzan/k8s/deployment.yaml"
    }
    stages {
        stage("Checkout") {
            steps {
                checkout scm
            }
        }
        stage("Build") {
            steps {
                sh "git rev-parse --short HEAD > commit-id"
                script {
                    tag = readFile('commit-id').trim()
                    imageName = "${registryHost}${appName}:${tag}"
                    env.BUILDIMG = imageName
                    echo "imageName: ${imageName}, tag: ${tag}"
                }
                sh "docker build -t ${imageName} -f applications/puzzle/Dockerfile applications/puzzle"
            }
        }
        stage("Push") {
            steps {
                sh "docker push ${env.BUILDING}"
            }
        }
        stage("Deploy") {
            steps {
                sh "sed 's#127.0.0.1:30400/puzzle:latest#'$BUILDIMG'#' applications/puzzle/k8s/deployment.yaml | kubectl apply -f -"
            }
        }
    }
}
